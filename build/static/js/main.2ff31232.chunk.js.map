{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","ToggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","textNew","toUpperCase","toLowerCase","split","length","App","setMode","title","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2ff31232.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Contacts</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      \r\n      <div className={`form-check form-switch text-${props.mode===\"dark\"?'white':'dark'}`}>\r\n  <input className=\"form-check-input\" onClick={props.ToggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}","import React ,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was clicked\")\r\n        const textNew=text.toUpperCase();\r\n        setText(textNew)\r\n    }\r\n    const handlelowClick=()=>{\r\n        console.log(\"Uppercase was clicked\")\r\n        const textNew=text.toLowerCase();\r\n        setText(textNew)\r\n    }\r\n    const handleOnchange=(event)=>{\r\n        console.log('on-change')\r\n        setText(event.target.value)\r\n    }\r\n    const [text,setText]=useState(\"Enter your text here2\");\r\n  return (\r\n    <>\r\n    <div className=\"container\"  style={{color: props.mode===\"dark\"?\"white\":\"dark\"}}>\r\n        <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode===\"dark\"?'grey':'white', color:props.mode===\"dark\"?'white':\"dark\" }} id=\"mybox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>click here to uperCase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handlelowClick}>click here to lowerCase</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode===\"dark\"?'white':'dark'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} text</p>\r\n        <p>{0.008*text.split(\" \").length} time to read the words</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  const [mode, setMode]=useState(\"light\");\n  const ToggleMode=()=>{\n    if (mode===\"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor=\"#042743\"\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\"\n    }  \n  }\n  return ( \n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} ToggleMode={ToggleMode}/>\n    <div>\n\n    {/* <Routes>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          </Route>\n        </Routes> */}\n        <TextForm heading=\"Enter the text to analyze\" mode={mode}/>\n     {/* <About/> */}\n     </div>\n     {/* </Router>  */}\n     </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n  "],"sourceRoot":""}